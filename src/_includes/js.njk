<script src="https://unpkg.com/popper.js@1"></script>
<script src="https://unpkg.com/tippy.js@4"></script>
<script>
  function navToggle() {
    let btn = document.getElementById('menuBtn');
    let nav = document.getElementById('menu');

    btn.classList.toggle('open');
    nav.classList.toggle('flex');
    nav.classList.toggle('hidden');
  }

  window.addEventListener('scroll', function () {
    let btt = document.getElementById('btt');

    if (window.scrollY >= 1080) {
      btt.classList.remove('hidden');
      btt.classList.add('block');
    } else {
      btt.classList.add('hidden');
      btt.classList.remove('block');
    }
  });

  console.log('Code/Design: ttntm.me'); // credit where credit is due

  const template = document.getElementById('followTip');
  const container = document.createElement('div');

  container.appendChild(document.importNode(template.content, true));

  tippy('#follow', {
    content: container.innerHTML,
    animation: 'scale',
    duration: 250,
    arrow: true,
    placement: 'bottom',
    interactive: true,
  });
</script>
<script>
    const TextTypeFactory = ({
                                 el = '.typewrite',
                                 toRotate = {},
                                 period = '',
                                 blinkerSpeed = 500,
                                 textSrcDir = '',
                                 loopOnce = false
                             } = {}) => {

        const TextTypeProto = {
            toRotate: toRotate,
            el: el,
            loopNum: 0,
            period: parseInt(period, 10),
            txt: '',
            textSrcDir: textSrcDir || '',
            loopOnceCount: 0,
            blinkerSpeed: blinkerSpeed,
            loopOnce,
            tick() {

                if (this.loopOnce) {

                    if (this.loopOnceCount === this.toRotate.length) return;

                }

                const i = this.loopNum % this.toRotate.length;
                const fullTxt = this.toRotate[i];

                if (this.isDeleting) {

                    this.txt = fullTxt.substring(0, this.txt.length - 1);

                } else {

                    this.txt = fullTxt.substring(0, this.txt.length + 1);

                }

                this.el.innerHTML = '<span class="wrap">' + this.txt + '</span>';

                const that = this;

                let delta = 300 - Math.random() * 100;

                if (this.isDeleting) {

                    delta /= 2;

                }

                let isBlinking = false;

                if (!this.isDeleting && this.txt === fullTxt) {

                    const wrap = this.el.querySelector('.wrap');

                    setInterval(() => {

                        if (!isBlinking) {

                            wrap.style.borderRight = '0.08em solid rgba(68,64,60,0)';

                            isBlinking = true;

                        } else {

                            wrap.style.borderRight = '0.08em solid rgba(68,64,60,1)';

                            isBlinking = false;

                        }

                        console.log(blinkerSpeed);

                    }, blinkerSpeed);

                    delta = this.period;
                    this.isDeleting = true;

                    this.loopOnceCount++;

                } else if (this.isDeleting && this.txt === '') {

                    this.isDeleting = false;
                    this.loopNum++;

                    delta = 500;
                }

                setTimeout(() => {
                    that.tick();
                }, delta);

            },
            setRenderTarget() {

            },
            start() {

                let elements = document.querySelectorAll(this.el);

                for (let i = 0; i < elements.length; i++) {
                    let toRotate = elements[i].getAttribute('data-type');
                    let period = elements[i].getAttribute('data-period');

                    let looponce = elements[i].getAttribute('data-looponce') === "true";

                    console.log({thisPeriod: this.period})

                    if (toRotate) {

                        const TextType = TextTypeFactory({
                            el: elements[i] || document.querySelectorAll(this.el)[i],
                            toRotate: this.toRotate.length && this.toRotate.length > 0 || JSON.parse(toRotate),
                            period: !isNaN(this.period) ? this.period : period,
                            loopOnce: this.loopOnce || looponce,
                            typewriterCont: this.typewriterCont !== '' ? document.querySelector(this.typewriterCont) : '',
                            textSrcDir: this.textSrcDir !== '' ? this.textSrcDir : '',
                            blinkerSpeed: !isNaN(this.blinkerSpeed) ? this.blinkerSpeed : 500
                        });

                        TextType.tick();


                    }

                }

                return this;

            }
        };

        return TextTypeProto;

    };

    const TextType = TextTypeFactory({
        el: '.typewrite',
        blinkerSpeed: 200
    });

    TextType.start();
</script>